name: Run server Sonar analysis
on:
  workflow_dispatch:
  workflow_call:
    inputs:
      configuration:
        description: "The configuration to use (development | insiders | production)"
        required: true
        default: development
        type: string
    secrets:
      MYSQL_PASSWORD:
        required: true
      SPRING_APPLICATION_PROPERTIES:
        required: true
      VERNITE_2022_PRIVATE_KEY_PEM:
        required: true
      SONAR_TOKEN:
        required: true
      SONAR_HOST_URL:
        required: true


jobs:
  analyze:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: packages/server

    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup environment
        id: setup
        uses: ./.github/actions/setup
        with:
          configuration: ${{ inputs.configuration }}
          mysql-password: ${{ secrets.MYSQL_PASSWORD }}
          spring-application-properties: ${{ secrets.SPRING_APPLICATION_PROPERTIES }}
          vernite-2022-private-key-pem: ${{ secrets.VERNITE_2022_PRIVATE_KEY_PEM }}

      - name: Cache SonarQube packages
        id: cache
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        if: ${{ contains(fromJSON(steps.setup.outputs.affected-projects), 'server') }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=server
