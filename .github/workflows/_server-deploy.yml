name: Deploy server

on:
  workflow_call:
    inputs:
      configuration:
        required: true
        type: string
        description: vernite-dev or vernite
    secrets:
      AUTO_DEPLOY_KEY:
        required: true
        description: SSH key for backend server

jobs:
  deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: packages/server

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup
        id: setup
        uses: ./.github/actions/setup
        with:
          configuration: ${{ inputs.configuration }}
          mysql-password: ${{ secrets.MYSQL_PASSWORD }}
          spring-application-properties: ${{ secrets.SPRING_APPLICATION_PROPERTIES }}
          vernite-2022-private-key-pem: ${{ secrets.VERNITE_2022_PRIVATE_KEY_PEM }}

      # Deploy to server using rsync
      - name: Deploy app
        if: ${{ contains(fromJSON(steps.setup.outputs.affected-projects), 'server') }}
        run: |
          eval $(ssh-agent -s)
          echo "${{ secrets.AUTO_DEPLOY_KEY }}" | tr -d '\r' | ssh-add - > /dev/null
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          ssh-keyscan -t rsa -p 2224 51.83.255.98 >> ~/.ssh/known_hosts
          rsync -a -e 'ssh -p 2224' target/vernite.jar backend@51.83.255.98:~/${{ inputs.configuration == 'insiders' && 'vernite-dev' || 'vernite' }}.jar
          ssh -p 2224 backend@51.83.255.98 "sudo /usr/bin/systemctl restart ${{ inputs.configuration == 'insiders' && 'vernite-dev' || 'vernite' }}.service"
